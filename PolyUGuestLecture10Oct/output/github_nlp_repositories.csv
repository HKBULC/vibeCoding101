Repository Name,GitHub URL,Stars,NLP Technology,Project Description,Primary Language,Key Features,Paper Excerpt
huggingface/transformers,https://github.com/huggingface/transformers,135000,Multiple (NER/QA/Text Classification/Machine Translation/Text Generation/Language Modeling),State-of-the-art machine learning models for text processing with unified API,Python,"Pre-trained models, multi-framework support, 70+ languages, production-ready","The use of BERT (Bidirectional Encoder Representations from Transformers) model and successive models have also played an important role for NLP. BERT provides contextual embedding for each word present in the text unlike context-free models."
explosion/spaCy,https://github.com/explosion/spaCy,29900,Multiple (NER/POS Tagging/Chunking/Information Extraction/Coreference Resolution),Industrial-strength Natural Language Processing library,Python,"Named entity recognition, part-of-speech tagging, dependency parsing, text classification","Named entity recognition (NER) is a technique to recognize and separate the named entities and group them under predefined classes. Part of speech tagging describes a sentence, determines the part of speech for each word."
facebookresearch/fairseq,https://github.com/facebookresearch/fairseq,30300,Machine Translation,Sequence modeling toolkit for translation and text generation,Python,"Transformer models, attention mechanisms, state-of-the-art translation","Machine Translation is generally translating phrases from one language to another with the help of a statistical engine like Google Translate. The challenge with machine translation technologies is not directly translating words but keeping the meaning of sentences intact."
openai/whisper,https://github.com/openai/whisper,69200,Speech Recognition,Automatic speech recognition system with multilingual support,Python,"Multilingual ASR, robust performance, easy integration","Hidden Markov Models are extensively used for speech recognition, where the output sequence is matched to the sequence of individual phonemes."
scikit-learn/scikit-learn,https://github.com/scikit-learn/scikit-learn,59700,Multiple (Text Classification/Spam Filtering/Document Similarity),Machine learning library with comprehensive text processing tools,Python,"Classification algorithms, TF-IDF, feature extraction, model evaluation","Various machine learning techniques have been applied to text categorization or Anti-Spam Filtering like Rule Learning, Naïve Bayes, Memory based Learning, Support vector machines."
tensorflow/tensorflow,https://github.com/tensorflow/tensorflow,185000,Text Classification,End-to-end machine learning platform,Python/C++,"Deep learning, neural networks, production deployment","Earlier machine learning techniques such as Naïve Bayes, HMM etc. were majorly used for NLP but by the end of 2010, neural networks transformed and enhanced NLP tasks by learning multilevel features."
nltk/nltk,https://github.com/nltk/nltk,13400,Multiple (POS Tagging/Chunking),Natural Language Toolkit for educational and research purposes,Python,"Tokenization, stemming, POS tagging, parsing, educational resources","At lexical level, analysis of structure of words is performed with respect to their lexical meaning and PoS. Stop words such as 'in', 'the', 'and' etc. are removed as they don't contribute to any meaningful interpretation."
tesseract-ocr/tesseract,https://github.com/tesseract-ocr/tesseract,61500,Optical Character Recognition,OCR engine with support for 100+ languages,C++,"Multi-language support, high accuracy, command-line interface","Optical Character Recognition (OCR) is used for automatic text recognition by translating printed and handwritten text into machine-readable format."
cjhutto/vaderSentiment,https://github.com/cjhutto/vaderSentiment,4200,Sentiment Analysis,Lexicon and rule-based sentiment analysis tool,Python,"Social media focused, handles emoticons, no training required","Sentiment analysis works by extracting sentiments about a given topic, and it consists of a topic specific feature term extraction, sentiment extraction, and association by relationship analysis."
sloria/TextBlob,https://github.com/sloria/TextBlob,9100,Sentiment Analysis,Simple Python library for processing textual data,Python,"Simple API, built on NLTK, sentiment analysis, noun phrase extraction","It provides a simple API for diving into common natural language processing (NLP) tasks such as part-of-speech tagging, noun phrase extraction, sentiment analysis, classification, translation, and more."
RaRe-Technologies/gensim,https://github.com/RaRe-Technologies/gensim,15600,Word Embedding,Topic modeling and document similarity analysis,Python,"Word2Vec, Doc2Vec, topic modeling, similarity queries","Mikolov et.al. proposed a word embedding process where the dense vector representation of text was addressed. Major use of neural networks in NLP is observed for word embedding where words are represented in the form of vectors."
OpenNMT/OpenNMT-py,https://github.com/OpenNMT/OpenNMT-py,6700,Machine Translation,Neural machine translation framework,Python,"Attention mechanisms, transformer models, research-oriented","In recent years, various methods have been proposed to automatically evaluate machine translation quality by comparing hypothesis translations with reference translations."
pytorch/pytorch,https://github.com/pytorch/pytorch,82900,Language Modeling,Deep learning framework with dynamic computation graphs,Python/C++,"Dynamic graphs, GPU acceleration, research-friendly","Neural networks can be used to anticipate a state that has not yet been seen, such as future states for which predictors exist whereas HMM predicts hidden states."
stanfordnlp/GloVe,https://github.com/stanfordnlp/GloVe,6900,Word Embedding,Global Vectors for Word Representation,C,"Unsupervised learning, global statistics, vector representations","These vectors can be used to recognize similar words by observing their closeness in this vector space, other uses of neural networks are observed in information retrieval, text summarization, text classification."
facebookresearch/fastText,https://github.com/facebookresearch/fastText,25900,Word Embedding,Library for efficient text classification and representation learning,C++,"Subword information, fast training, multilingual support","The model basically learns the basic characteristics and features of language and then applies them to new phrases. Language models analyse text data to calculate word probability."
PaddlePaddle/PaddleOCR,https://github.com/PaddlePaddle/PaddleOCR,43400,Optical Character Recognition,Multilingual OCR toolkits based on PaddlePaddle,Python,"80+ languages, lightweight models, easy deployment","OCR systems have direct real-world applications and are used for automatic text recognition by translating printed and handwritten text into machine-readable format."
allenai/allennlp,https://github.com/allenai/allennlp,11700,Multiple (Question Answering/Semantic Role Labeling/Coreference Resolution),Research library for advanced NLP with PyTorch,Python,"Research-oriented, modular design, pre-trained models","Semantic Role Labeling (SRL) works by giving a semantic role to a sentence. State-of-the-art SRL systems comprise several stages: creating a parse tree, identifying which parse tree nodes represent the arguments of a given verb."
JaidedAI/EasyOCR,https://github.com/JaidedAI/EasyOCR,24300,Optical Character Recognition,Ready-to-use OCR with 80+ supported languages,Python,"Easy integration, GPU support, high accuracy","Optical character recognition has direct real-world applications and provides automatic text recognition capabilities for various document processing tasks."
deepset-ai/haystack,https://github.com/deepset-ai/haystack,16800,Question Answering,End-to-end framework for building search systems,Python,"Question answering pipelines, document retrieval, modern architectures","Question answering systems provide real-time responses which are widely used in customer care services. Stanford Question Answering Dataset (SQuAD): it is a reading comprehension dataset."
stanfordnlp/stanza,https://github.com/stanfordnlp/stanza,7200,POS Tagging,Official Stanford NLP Python library,Python,"Multi-language support, neural networks, research-quality","Various authors have done research on making parts of speech taggers for various languages such as Arabic, Sanskrit, Hindi to efficiently tag and classify words as nouns, adjectives, verbs etc."
mozilla/DeepSpeech,https://github.com/mozilla/DeepSpeech,25200,Speech Recognition,Open source embedded speech-to-text engine,Python/C++,"TensorFlow implementation, real-time processing, privacy-focused","Speech recognition systems match output sequences to sequences of individual phonemes and have been major features in speech processing development."
Uberi/speech_recognition,https://github.com/Uberi/speech_recognition,8400,Speech Recognition,Speech recognition library for Python,Python,"Multiple engine support, easy API, cross-platform","The (D)ARPA speech recognition and message understanding conferences were major features in speech processing development and evaluation."
flairNLP/flair,https://github.com/flairNLP/flair,13900,Chunking,Simple framework for state-of-the-art NLP,Python,"Contextual embeddings, sequence labeling, easy training","Chunking is a process of separating phrases from unstructured text. Chunking known as 'Shadow Parsing' labels parts of sentences with syntactic correlated keywords like Noun Phrase (NP) and Verb Phrase (VP)."
stanfordnlp/CoreNLP,https://github.com/stanfordnlp/CoreNLP,9700,Information Extraction,Suite of core NLP tools,Java,"Coreference resolution, relation extraction, multilingual","Information extraction is concerned with identifying phrases of interest of textual data. For many applications, extracting entities such as names, places, events, dates, times, and prices is a powerful way of summarizing information."
THUNLP/OpenNRE,https://github.com/THUNLP/OpenNRE,4300,Information Extraction,Open source toolkit for neural relation extraction,Python,"Relation extraction, neural networks, benchmark datasets","Information extraction applications include extracting entities such as names, places, events, dates, times, and prices as a powerful way of summarizing the information relevant to a user's needs."
huggingface/neuralcoref,https://github.com/huggingface/neuralcoref,2800,Coreference Resolution,Fast coreference resolution in spaCy,Python,"Neural approach, spaCy integration, high performance","Co-reference resolution refers to a sentence or larger set of text that determines all words which refer to the same object. Coreference resolution is achieved by finding all expressions that refer to the same entity in a text."
RasaHQ/rasa,https://github.com/RasaHQ/rasa,18700,Dialogue Systems,Conversational AI framework,Python,"Intent recognition, entity extraction, dialogue management","Dialogue systems are very prominent in real world applications ranging from providing support to performing a particular action. This leads to producing systems that can enable robots to interact with humans in natural languages."
gunthercox/ChatterBot,https://github.com/gunthercox/ChatterBot,14000,Dialogue Systems,Machine learning conversational dialog engine,Python,"Machine learning approach, easy integration, trainable","Dialogue systems utilize phonemic and lexical levels of language and can enable robots to interact with humans in natural languages such as Google's assistant, Windows Cortana, Apple's Siri."
microsoft/DialoGPT,https://github.com/microsoft/DialoGPT,1800,Multiple (Text Summarization/Language Modeling/Text Generation/Dialogue Systems),Large-scale pre-trained dialogue response generation model,Python,"GPT-based, conversational AI, pre-trained models","Natural Language Generation (NLG) is the process of producing phrases, sentences and paragraphs that are meaningful from an internal representation."
openai/gpt-2,https://github.com/openai/gpt-2,22400,Text Generation,Transformer-based language model,Python,"Autoregressive generation, large-scale pre-training, text completion","Language generation involves tasks including content selection, textual organization, linguistic resources selection, and realization as actual text output."
minimaxir/textgenrnn,https://github.com/minimaxir/textgenrnn,4900,Text Generation,Python library for text generation using neural networks,Python,"Easy training, character-level, GPU support","The process of language generation involves interweaved tasks including content selection, textual organization, and realization of selected resources as actual text."
hit-scir/ltp,https://github.com/hit-scir/ltp,4300,Semantic Role Labeling,Language Technology Platform for Chinese,Python,"Chinese NLP, comprehensive toolkit, semantic analysis","Semantic processing determines the possible meanings of a sentence by processing its logical structure to recognize the most relevant words to understand the interactions among words."
strubell/LISA,https://github.com/strubell/LISA,147,Semantic Role Labeling,Linguistically-Informed Self-Attention for SRL,Python,"Linguistically informed, attention mechanisms, state-of-the-art","State-of-the-art SRL systems comprise several stages: creating a parse tree, identifying which parse tree nodes represent the arguments of a given verb, and finally classifying these nodes."
text2emotion/emotion,https://github.com/text2emotion/emotion,142,Emotion Detection,Python library for emotion detection in text,Python,"Emotion classification, multiple emotions, simple API","Emotion detection investigates and identifies the types of emotion from speech, facial expressions, gestures, and text. They have categorized sentences into 6 groups based on emotions."
monologg/GoEmotions-pytorch,https://github.com/monologg/GoEmotions-pytorch,456,Emotion Detection,PyTorch implementation of GoEmotions dataset,Python,"27 emotion categories, BERT-based, fine-tuning","Emotion detection uses techniques to help users in prioritizing their messages based on the emotions attached with the message and identifies types of emotion from text."
cardiffnlp/tweeteval,https://github.com/cardiffnlp/tweeteval,291,Emotion Detection,Unified benchmark for tweet classification,Python,"Twitter-specific, multi-task, evaluation framework","Sentiment analysis and emotion detection work by analyzing social media content and determining emotional states expressed in text data."
SpamAssassin/spamassassin,https://github.com/SpamAssassin/spamassassin,319,Spam Filtering,Mail filter to identify spam,Perl,"Rule-based filtering, Bayesian analysis, real-time processing","Spam filters are becoming important as the first line of defence against the unwanted emails. A filtering solution uses a set of protocols to determine which messages are spam."
rspamd/rspamd,https://github.com/rspamd/rspamd,2000,Spam Filtering,Fast and feature-rich spam filtering system,C,"High performance, machine learning, modular architecture","Various machine learning techniques have been applied to Anti-Spam Filtering including Naïve Bayes, Support vector machines, Decision Trees, and Maximum Entropy models."
qdrant/qdrant,https://github.com/qdrant/qdrant,20500,Document Similarity,Vector database for semantic search,Rust,"Vector similarity search, high performance, API-first","Document similarity models capture information on how many times a word is used in a document and can be used for computing document similarity and relevance in information retrieval systems."